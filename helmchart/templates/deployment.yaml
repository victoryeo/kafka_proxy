apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helmchart.fullname" . }}
  labels:
    {{- include "helmchart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.kafkaProxy.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helmchart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.kafkaProxy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helmchart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.kafkaProxy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helmchart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.kafkaProxy.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy | quote }}
          ports:
            - name: postgresql
              containerPort: 5432
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          env:
          - name: POSTGRESQL_PORT_NUMBER
            value: {{ .Values.postgresql.containerPorts.postgresql | quote }}
          - name: POSTGRESQL_VOLUME_DIR
            value: {{ .Values.postgresql.persistence.mountPath | quote }}
          - name: PGDATA
            value: {{ .Values.postgresql.postgresqlDataDir | quote }}
          - name: POSTGRES_MULTIPLE_DATABASES
            value: {{ include "helm-toolkit.utils.joinListWithComma" .Values.postgresql.auth.database }}
          - name: POSTGRES_USER
            value: {{ .Values.postgresql.auth.username }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgresql.auth.password }}
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
        - name: zookeeper
          image: "{{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.zookeeper.image.pullPolicy | quote }}
          ports:
            - name: zookeeper
              containerPort: 2181
          resources:
            {{- toYaml .Values.zookeeper.resources | nindent 12 }}
          env:
          - name: ALLOW_ANONYMOUS_LOGIN
            value: "yes"
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy | quote }}
          ports:
            - name: kafka
              containerPort: 9092
          resources:
            {{- toYaml .Values.kafka.resources | nindent 12 }}
          env:
          - name: KAFKA_VOLUME_DIR
            value: {{ .Values.kafka.persistence.mountPath | quote }}
          - name: KAFKA_LOG_DIR
            value: {{ .Values.kafka.logPersistence.mountPath | quote }}
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.kafkaProxy.securityContext | nindent 12 }}
          image: "{{ .Values.kafkaProxy.image.repository }}:{{ .Values.kafkaProxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kafkaProxy.image.pullPolicy }}
          ports:
            - containerPort: 8081
              protocol: TCP
          resources:
            {{- toYaml .Values.kafkaProxy.resources | nindent 12 }}
      {{- with .Values.kafkaProxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaProxy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaProxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
