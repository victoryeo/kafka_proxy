# Default values for helmchart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

kafkaProxy:
  image:
    repository: zihangg/kafka-proxy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: LoadBalancer
    port: 8081
    targetPort: 8081

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
    requests:
      cpu: 100m

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  image:
    registry: docker.io
    repository: zihangg/multiple-pg-db
    tag: latest
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

  service:
    type: LoadBalancer
    port: 5432
    targetPort: 5432 

  auth:
    postgresPassword: "password"
    username: "postgres"
    password: "password"
    database:
      - "openOrders"
      - "price"
    existingSecret: ""
    secretKeys:
      adminPasswordKey: "password"
      userPasswordKey: "password"
  containerPorts:
    postgresql: 5432
  postgresqlDataDir: /bitnami/postgresql/data
  postgresqlSharedPreloadLibraries: "pgaudit"
  shmVolume:
    enabled: true
    sizeLimit: ""
  persistence:
    enabled: true
    mountPath: /bitnami/postgresql
    size: 4Gi

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
    requests:
      cpu: 100m

zookeeper:
  image:
    registry: docker.io
    repository: bitnami/zookeeper
    tag: 3.8.0-debian-11-r47
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false

  service:
    type: LoadBalancer
    port: 2181
    targetPort: 2181
  
  auth:
    client:
      enabled: false
  
  containerPorts:
    client: 2181
    tls: 3181
    follower: 2888
    election: 3888
  
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
    requests:
      cpu: 100m

kafka:
  image:
    registry: docker.io
    repository: bitnami/kafka
    tag: 3.3.1-debian-11-r11
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false

  service:
    type: LoadBalancer
    port: 9092
    targetPort: 9092

  config: ""
  existingConfigmap: ""

  auth:
    clientProtocol: plaintext
    externalClientProtocol: ""
    interBrokerProtocol: plaintext

  containerPorts:
    client: 9092
    internal: 9093
    external: 9094

  persistence:
    enabled: true
    size: 8Gi
    mountPath: /bitnami/kafka

  logPersistence:
    enabled: false
    mountPath: /opt/bitnami/kafka/logs

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
    requests:
      cpu: 100m